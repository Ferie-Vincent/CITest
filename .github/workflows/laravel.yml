name: Deploy Laravel Application

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, intl, dom, pdo_mysql
        ini-values: post_max_size=512M, upload_max_filesize=512M, memory_limit=512M
        coverage: none

    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: ~/.composer/cache
        key: composer-${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: composer-${{ runner.os }}-

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress --no-interaction --optimize-autoloader

    - name: Copy .env.example to .env if .env does not exist
      run: |
        if [ ! -f .env ]; then
          cp .env.example .env
        fi

    - name: Generate application key
      run: php artisan key:generate

    - name: Run migrations
      run: php artisan migrate --force

    - name: Deploy to Server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      run: |
        echo "üöÄ D√©ploiement en cours..."

        # Configurer la connexion SSH
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts

        # Tester la connexion SSH
        ssh -v $SSH_USERNAME@$SSH_HOST "echo 'Connexion SSH r√©ussie ‚úÖ'"

        # D√©ploiement des fichiers avec rsync
        echo "üìÇ Synchronisation des fichiers..."
        rsync -avz --exclude='.git' --exclude='vendor' --exclude='.env' . $SSH_USERNAME@$SSH_HOST:/path/to/your/laravel/app || { echo "‚ùå Erreur Rsync"; exit 1; }

        # Ex√©cution des commandes sur le serveur
        ssh $SSH_USERNAME@$SSH_HOST << 'EOF'
          set -e  # Arr√™te l'ex√©cution en cas d'erreur
          echo "üìå D√©ploiement sur le serveur..."
          cd /path/to/your/laravel/app

          echo "üì¶ Installation des d√©pendances..."
          composer install --no-dev --prefer-dist --no-progress --no-interaction --optimize-autoloader || { echo "‚ùå Erreur Composer"; exit 1; }

          echo "üõ†Ô∏è Ex√©cution des migrations..."
          php artisan migrate --force || { echo "‚ùå Erreur Migration"; exit 1; }

          echo "‚öôÔ∏è Mise en cache..."
          php artisan config:clear && php artisan config:cache
          php artisan route:clear && php artisan route:cache
          php artisan view:clear && php artisan view:cache

          echo "üîê Configuration des permissions..."
          chmod -R 775 storage bootstrap/cache
          chown -R www-data:www-data storage bootstrap/cache

          echo "‚úÖ D√©ploiement termin√© avec succ√®s !"
        EOF
